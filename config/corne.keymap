/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";
                #define DEFAULT 0
                #define NUM 1
                #define FUNCT 2
                #define CONTROLS 3
                

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHFT  |
//                    | CTRL | GUI | SPC |   | ENT | RSE  | LWR |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp TAB &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp LCTRL &kp LGUI &kp SPACE   &kp RET &to 1 &to 0
                        >;
                };
                num_layer {
// -----------------------------------------------------------------------------------------
// |  TRANS |  {  |  &  |  *  |  (  |  ~  |   |  *  |  7  |  8  |  9  | +  | TRANS |
// | TRANS| } | $ | % | ^ | ( |   | / | 4 |  5 | 6 |  -  |   ,  |
// | TRANS |  \  |  !  |  @  |  #  |   )  |   |  0  |  1  |  2  |  3  |  .  |  =  |
//                    | trans | trans | trans |   | trans | Function | default |
                        bindings = <
   &trans    &kp LBKT       &kp AMPS       &kp STAR       &kp LPAR       &kp GRAVE         &kp STAR   &kp KP_N7   &kp KP_N8 &kp KP_N9 &kp PLUS &trans
   &trans &kp RBKT  &kp DLLR &kp PRCNT &kp CARET &kp LPAR   &kp KP_SLASH &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_MINUS &kp KP_COMMA
   &trans   &kp BSLH       &kp EXCL       &kp AT       &kp HASH       &kp RPAR         &kp KP_N0   &kp KP_N1   &kp KP_N2 &kp KP_N3    &kp KP_DOT &kp KP_EQUAL
                          	        &trans     &trans       &trans      &trans  &to 2   &to 0
                        >;
                };

                function_layer {
// -----------------------------------------------------------------------------------------
// |TRANS|  F9 | F10 | F11 | F12|None |   |None |None |  UP |None |None |TRANS |
// |TRANS|  F5 |  F6 |  F7 | F8 |None |   |None |LEFT |DOWN |RIGHT|None |None |
// |TRANS|  F1 |  F2 |  F3 | F4 |None |   |None |None |None |None |None |TRANS |
//                    |TRANS |TRANS| TRANS |   | TRANS | BLT | DEFAULT |
                        bindings = <
   &trans  &kp F9 &kp F10 &kp F11 &kp F12 &none     &none &none  &kp UP &none &none &trans
   &trans &kp F5   &kp F6 &kp F7   &kp F8   &none      &none &kp LEFT &kp DOWN &kp RIGHT &none &none
   &trans &kp F1   &kp F2 &kp F3   &kp F4   &none      &none &none  &none  &none &none &trans
                    	     &trans &trans   &trans   &trans   &to 3    &to 0
                        >;
                };

                control_layer {
// -----------------------------------------------------------------------------------------
// |None |  BT 0 | BT 1 | BT 2 | BT 3|None |   |None |None | None|None |None |None |
// |None |  None |  None | None | None |None |   |None |None |None |None |None |None |
// |None |  None |  None |  None | None |None |   |None |None |None |None |None |BT CLR |
//                    |TRANS |TRANS| TRANS |   | TRANS | BLT | DEFAULT |
                        bindings = <
   &trans  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none     &none &none  &none &none &none &none
   &trans &none &none &none &none   &none      &none &none &none &none &none &none
   &trans &none &none &none &none   &none      &none &none  &none  &none &none &bt BT_CLR
                    	     &trans &trans   &trans   &trans   &to 3    &to 0
                        >;
                };
        };
};
